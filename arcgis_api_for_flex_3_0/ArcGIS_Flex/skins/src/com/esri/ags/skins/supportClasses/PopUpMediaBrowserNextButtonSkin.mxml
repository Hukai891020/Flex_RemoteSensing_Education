<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (c) 2011 ESRI

     All rights reserved under the copyright laws of the United States
     and applicable international laws, treaties, and conventions.

     You may freely redistribute and use this sample code, with or
     without modification, provided you include the original copyright
     notice and use restrictions.

     See use restrictions in use_restrictions.txt.
-->
<!---
     The default skin class for the next button of a PopUpMediaBrowser component.
     @private
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009"
             xmlns:s="library://ns.adobe.com/flex/spark"
             alpha.disabled="0.5"
             minHeight="20"
             minWidth="15">

    <fx:Metadata>
        [HostComponent("spark.components.Button")]
    </fx:Metadata>

    <fx:Script>
        // Define the symbol fill items that should be colored by the "symbolColor" style.
        static private const symbols:Array = [ "rectSymbolFill" ];

        override public function get symbolItems():Array
        {
            return symbols;
        }

        override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
        {
            if (currentState == "over" || currentState == "down")
            {
                nextSymbolFill.color = getStyle("chromeColor");
            }
            else
            {
                nextSymbolFill.color = getStyle("symbolColor");
            }
            super.updateDisplayList(unscaledWidth, unscaledHeight);
        }
    </fx:Script>

    <s:states>
        <s:State name="up"/>
        <s:State name="over"/>
        <s:State name="down"/>
        <s:State name="disabled"/>
    </s:states>

    <!-- layer 1: mouse hit fill -->
    <s:Rect left="0" right="0" top="0" bottom="0"
            excludeFrom="over,down">
        <s:fill>
            <s:SolidColor alpha="0"/>
        </s:fill>
    </s:Rect>

    <!-- layer 2: colored fill -->
    <s:Rect left="0" right="0" top="0" bottom="0"
            includeIn="over,down">
        <s:fill>
            <s:SolidColor id="rectSymbolFill" color="0x000000"/>
        </s:fill>
    </s:Rect>

    <!-- triangle -->
    <s:Path data="M 1 0 L 1 13 L 8 7 L 1 0 Z"
            horizontalCenter="0"
            verticalCenter="0"
            winding="evenOdd">
        <s:fill>
            <s:SolidColor id="nextSymbolFill" color="0x000000"/>
        </s:fill>
    </s:Path>

</s:SparkSkin>
