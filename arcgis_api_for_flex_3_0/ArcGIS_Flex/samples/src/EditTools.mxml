<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:esri="http://www.esri.com/2008/ags"
               pageTitle="Edit graphics with the EditTool">
    <!--
         This basic sample shows you how to use the EditTool in your map.
         The DrawTool and EditTool are both part of an editing experience.
         The DrawTool allows you to draw new graphics, while the EditTool
         allows you to edit geometries of existing graphics.

         This sample shows you how to use DrawTool and EditTool together, and
         specifically how to activate the EditTool for a feature.
         You can then move the clicked feature by click and drag it somewhere else.
         To edit individual vertices of a line or polygon, simply move any
         existing vertices or add new ones by clicking on a "ghost" vertice
         and dragging it to anywhere.
         To rotate and scale a feature, click on a selected feature.
    -->

    <fx:Script>
        <![CDATA[
            import com.esri.ags.Graphic;
            import com.esri.ags.events.DrawEvent;
            import com.esri.ags.events.MapMouseEvent;
            import com.esri.ags.geometry.Extent;
            import com.esri.ags.geometry.Polygon;
            import com.esri.ags.geometry.Polyline;
            import com.esri.ags.symbols.SimpleFillSymbol;
            import com.esri.ags.symbols.SimpleLineSymbol;
            import com.esri.ags.symbols.SimpleMarkerSymbol;

            import mx.events.FlexEvent;
            import mx.events.ItemClickEvent;

            import spark.events.IndexChangeEvent;

            private var graphic:Graphic;
            private var lastEditGraphic:Graphic;
            private var lastActiveEditTypes:String;

            protected function tbb_itemClickHandler(event:ItemClickEvent):void
            {
                if (tbb.selectedIndex < 0)
                {
                    // when toggling a tool off, deactivate it
                    myDrawTool.deactivate();
                }
                else
                {
                    switch (event.item.label)
                    {
                        case "MAPPOINT":
                        {
                            myDrawTool.activate(DrawTool.MAPPOINT);
                            break;
                        }
                        case "POLYLINE":
                        {
                            myDrawTool.activate(DrawTool.POLYLINE);
                            break;
                        }
                        case "FREEHAND_POLYLINE":
                        {
                            myDrawTool.activate(DrawTool.FREEHAND_POLYLINE);
                            break;
                        }
                        case "POLYGON":
                        {
                            myDrawTool.activate(DrawTool.POLYGON);
                            break;
                        }
                        case "FREEHAND_POLYGON":
                        {
                            myDrawTool.activate(DrawTool.FREEHAND_POLYGON);
                            break;
                        }
                        case "EXTENT":
                        {
                            myDrawTool.activate(DrawTool.EXTENT);
                            break;
                        }
                        case "CIRCLE":
                        {
                            myDrawTool.activate(DrawTool.CIRCLE);
                            break;
                        }
                        case "ELLIPSE":
                        {
                            myDrawTool.activate(DrawTool.ELLIPSE);
                            break;
                        }
                    }
                }
            }

            protected function drawTool_drawEndHandler(event:DrawEvent):void
            {
                // reset after finished drawing a feature
                myDrawTool.deactivate();
                tbb.selectedIndex = -1;
            }

            private function myMap_mapMouseDownHandler(event:MapMouseEvent):void
            {
                event.currentTarget.addEventListener(MouseEvent.MOUSE_MOVE, map_mouseMoveHandler);
                event.currentTarget.addEventListener(MouseEvent.MOUSE_UP, map_mouseUpHandler);
            }

            private function map_mouseMoveHandler(event:MouseEvent):void
            {
                event.currentTarget.removeEventListener(MouseEvent.MOUSE_MOVE, map_mouseMoveHandler);
                event.currentTarget.removeEventListener(MouseEvent.MOUSE_UP, map_mouseUpHandler);
            }

            private function map_mouseUpHandler(event:MouseEvent):void
            {
                event.currentTarget.removeEventListener(MouseEvent.MOUSE_MOVE, map_mouseMoveHandler);
                event.currentTarget.removeEventListener(MouseEvent.MOUSE_UP, map_mouseUpHandler);

                if (event.target is Graphic || event.target.parent is Graphic)
                {
                    if (event.target is Graphic)
                    {
                        graphic = Graphic(event.target);
                    }
                    else if (event.target.parent is Graphic) //check for PictureMarkerSymbol
                    {
                        graphic = Graphic(event.target.parent);
                    }

                    if (lastEditGraphic !== graphic)
                    {
                        lastEditGraphic = graphic;
                        lastActiveEditTypes = "moveRotateScale"; // make sure move and edit vertices is the 1st mode
                    }
                    if (graphic.geometry is Polyline || graphic.geometry is Polygon)
                    {
                        if (lastActiveEditTypes == "moveEditVertices")
                        {
                            lastActiveEditTypes = "moveRotateScale";
                            myEditTool.activate(EditTool.MOVE | EditTool.SCALE | EditTool.ROTATE, [ graphic ]);
                        }
                        else
                        {
                            lastActiveEditTypes = "moveEditVertices";
                            myEditTool.activate(EditTool.MOVE | EditTool.EDIT_VERTICES, [ graphic ]);
                        }
                    }
                    else if (graphic.geometry is Extent)
                    {
                        myEditTool.activate(EditTool.MOVE | EditTool.SCALE, [ graphic ]);
                    }
                    else if (graphic.graphicsLayer == myGraphicsLayer)
                    {
                        myEditTool.activate(EditTool.MOVE | EditTool.EDIT_VERTICES, [ graphic ]);
                    }
                }
                else
                {
                    myEditTool.deactivate();
                    lastActiveEditTypes = "moveRotateScale"; // make sure move and edit vertices is the 1st mode
                }
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <!-- Symbol for all point shapes -->
        <esri:SimpleMarkerSymbol id="sms"
                                 color="0x00FF00"
                                 size="12"
                                 style="square"/>

        <!-- Symbol for all line shapes -->
        <esri:SimpleLineSymbol id="sls"
                               width="3"
                               color="0x00FF00"/>

        <!-- Symbol for all polygon shapes -->
        <esri:SimpleFillSymbol id="sfs"
                               color="0xFFFFFF"
                               style="diagonalcross">
            <esri:outline>
                <esri:SimpleLineSymbol width="2" color="0x00FF00"/>
            </esri:outline>
        </esri:SimpleFillSymbol>

        <esri:DrawTool id="myDrawTool"
                       drawEnd="drawTool_drawEndHandler(event)"
                       fillSymbol="{sfs}"
                       graphicsLayer="{myGraphicsLayer}"
                       lineSymbol="{sls}"
                       map="{myMap}"
                       markerSymbol="{sms}"/>

        <esri:EditTool id="myEditTool" map="{myMap}"/>
    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout/>
    </s:layout>

    <s:controlBarLayout>
        <s:VerticalLayout horizontalAlign="center"/>
    </s:controlBarLayout>
    <s:controlBarContent>
        <s:Label fontSize="14"
                 fontWeight="bold"
                 paddingTop="10"
                 text="Using DrawTool and EditTool"/>
        <mx:ToggleButtonBar id="tbb"
                            itemClick="tbb_itemClickHandler(event)"
                            labelField="null"
                            selectedIndex="-1"
                            toggleOnClick="true">
            <fx:Object icon="@Embed(source='assets/i_draw_point.png')" label="MAPPOINT"/>
            <fx:Object icon="@Embed(source='assets/i_draw_line.png')" label="POLYLINE"/>
            <fx:Object icon="@Embed(source='assets/i_draw_freeline.png')" label="FREEHAND_POLYLINE"/>
            <fx:Object icon="@Embed(source='assets/i_draw_poly.png')" label="POLYGON"/>
            <fx:Object icon="@Embed(source='assets/i_draw_freepoly.png')" label="FREEHAND_POLYGON"/>
            <fx:Object icon="@Embed(source='assets/i_draw_rect.png')" label="EXTENT"/>
            <fx:Object icon="@Embed(source='assets/i_draw_circle.png')" label="CIRCLE"/>
            <fx:Object icon="@Embed(source='assets/i_draw_ellipse.png')" label="ELLIPSE"/>
        </mx:ToggleButtonBar>
    </s:controlBarContent>

    <esri:Map id="myMap"
              level="3"
              mapMouseDown="myMap_mapMouseDownHandler(event)"
              wrapAround180="true">
        <esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer"/>
        <esri:GraphicsLayer id="myGraphicsLayer"/>
    </esri:Map>

    <s:Label width="100%">
        <s:text>The DrawTool and EditTool are both part of an editing experience.  The DrawTool allows you to draw new graphics, while the EditTool allows you to edit geometries of existing graphics.
In this sample, click on a graphic to activate the EditTool for that feature.  You can then move the clicked feature by click and drag it somewhere else.  To edit individual vertices of a line or polygon, simply move any existing vertices or add new ones by clicking on a "ghost" vertice and dragging it to anywhere.</s:text>
    </s:Label>

</s:Application>
