<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:esri="http://www.esri.com/2008/ags"
               creationComplete="application_creationCompleteHandler(event)"
               pageTitle="Using AttachmentInspector">
    <!--
         This sample shows you how to use the AttachmentInspector to allow attachments on the map.
    -->

    <fx:Script>
        <![CDATA[
            import com.esri.ags.events.AttachmentEvent;
            import com.esri.ags.events.IdentifyEvent;
            import com.esri.ags.events.MapMouseEvent;
            import com.esri.ags.geometry.MapPoint;
            import com.esri.ags.skins.supportClasses.AttachmentMouseEvent;
            import com.esri.ags.tasks.supportClasses.IdentifyResult;

            import mx.controls.Alert;
            import mx.events.FlexEvent;
            import mx.rpc.events.FaultEvent;

            private function application_creationCompleteHandler(event:FlexEvent):void
            {
                map.infoWindow.addEventListener(Event.CLOSE, infoWindow_closeHandler);

                // Listen for bubbling events from the attachment inspector list
                addEventListener(AttachmentMouseEvent.ATTACHMENT_DOUBLE_CLICK, attachmentDoubleClickHandler);
            }

            private function map_mapClickHandler(event:MapMouseEvent):void
            {
                map.infoWindow.hide();
                identifyParameters.geometry = event.mapPoint;
                identifyTask.execute(identifyParameters);
            }

            private function identifyTask_executeCompleteHandler(event:IdentifyEvent):void
            {
                if (event.identifyResults.length > 0)
                {
                    const identifyResult:IdentifyResult = event.identifyResults[0];
                    for (var key:String in identifyResult.feature.attributes)
                    {
                        // replace alias name with the field name(Object Id -> objectid)
                        if (key === "Object ID")
                        {
                            const val:Number = identifyResult.feature.attributes[key];

                            delete identifyResult.feature.attributes[key];
                            identifyResult.feature.attributes["objectid"] = val;
                        }
                    }
                    attachmentInspector.showAttachments(identifyResult.feature, featureLayer);
                    map.infoWindow.show(identifyResult.feature.geometry as MapPoint);
                }
            }

            private function attachmentDoubleClickHandler(event:AttachmentMouseEvent):void
            {
                navigateToURL(new URLRequest(event.attachmentInfo.url));
            }

            private function attachmentInspector_faultHandler(event:FaultEvent):void
            {
                status.text = event.fault.faultString;
                Alert.show(event.fault.message, "Fault");
            }

            private function infoWindow_closeHandler(event:Event):void
            {
                attachmentInspector.clear();
                status.text = '';
            }

            private function attachmentInspector_addAttachmentCompleteHandler(event:AttachmentEvent):void
            {
                status.text = event.featureEditResult.success ? 'Attachment Added' : 'Error adding attachment';
            }

            private function attachmentInspector_deleteAttachmentsCompleteHandler(event:AttachmentEvent):void
            {
                status.text = event.featureEditResult.success ? 'Attachment Deleted' : 'Error deleting attachment';
            }

            private function attachmentInspector_queryAttachmentInfosCompleteHandler(event:AttachmentEvent):void
            {
                status.text = 'Query attachment infos complete';
            }
        ]]>
    </fx:Script>

    <fx:Declarations>
        <esri:IdentifyParameters id="identifyParameters"
                                 width="{map.width}" height="{map.height}"
                                 mapExtent="{map.extent}"
                                 returnGeometry="true"
                                 spatialReference="{map.spatialReference}"
                                 tolerance="11"/>
        <esri:IdentifyTask id="identifyTask"
                           executeComplete="identifyTask_executeCompleteHandler(event)"
                           showBusyCursor="true"
                           url="http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/SanFrancisco/311Incidents/MapServer"/>
        <esri:FeatureLayer id="featureLayer" url="http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/SanFrancisco/311Incidents/FeatureServer/0"/>
    </fx:Declarations>

    <s:layout>
        <s:VerticalLayout/>
    </s:layout>

    <esri:Map id="map" mapClick="map_mapClickHandler(event)">
        <esri:extent>
            <esri:WebMercatorExtent minlon="-122.4306" minlat="37.7666" maxlon="-122.4231" maxlat="37.7719"/>
        </esri:extent>
        <esri:infoWindowContent>
            <esri:AttachmentInspector id="attachmentInspector"
                                      addAttachmentComplete="attachmentInspector_addAttachmentCompleteHandler(event)"
                                      deleteAttachmentsComplete="attachmentInspector_deleteAttachmentsCompleteHandler(event)"
                                      fault="attachmentInspector_faultHandler(event)"
                                      queryAttachmentInfosComplete="attachmentInspector_queryAttachmentInfosCompleteHandler(event)"/>
        </esri:infoWindowContent>
        <esri:ArcGISTiledMapServiceLayer id="basemap" url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"/>
        <esri:ArcGISDynamicMapServiceLayer id="incidents" url="http://sampleserver3.arcgisonline.com/ArcGIS/rest/services/SanFrancisco/311Incidents/MapServer"/>
    </esri:Map>

    <s:Label id="status" width="100%"/>

</s:Application>
