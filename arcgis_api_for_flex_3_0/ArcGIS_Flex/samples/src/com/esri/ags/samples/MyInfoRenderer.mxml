<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
          xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx"
          clipAndEnableScrolling="true"
          creationComplete="creationCompleteHandler()"
          implements="mx.core.IDataRenderer">
    <!--
         This is used by the QueryResultsWithChart sample.
    -->
    <fx:Style>
        @namespace s "library://ns.adobe.com/flex/spark";
        @namespace mx "library://ns.adobe.com/flex/mx";
        
        .InfoCloseButton {
            disabledSkin: Embed(source="/assets/skins.swf", symbol="Callout_closeButtonDisabledSkin");
            downSkin: Embed(source="/assets/skins.swf", symbol="Callout_closeButtonDownSkin");
            overSkin: Embed(source="/assets/skins.swf", symbol="Callout_closeButtonOverSkin");
            upSkin: Embed(source="/assets/skins.swf", symbol="Callout_closeButtonUpSkin");
        }
        
        .InfoExpandButton {
            disabledSkin: Embed(source="/assets/skins.swf", symbol="Callout_expandButtonDisabledSkin");
            downSkin: Embed(source="/assets/skins.swf", symbol="Callout_expandButtonDownSkin");
            overSkin: Embed(source="/assets/skins.swf", symbol="Callout_expandButtonOverSkin");
            upSkin: Embed(source="/assets/skins.swf", symbol="Callout_expandButtonUpSkin");
        }
    </fx:Style>

    <fx:Script>
        <![CDATA[
            private var _data:Object;

            [Bindable]
            // implement IDataRenderer
            public function get data():Object
            {
                return _data;
            }

            public function set data(value:Object):void
            {
                _data = value;
            }

            private function creationCompleteHandler():void
            {
                parent.addEventListener(MouseEvent.ROLL_OVER, rollOverHandler);
                parent.addEventListener(MouseEvent.ROLL_OUT, rollOutHandler);
            }

            private function rollOverHandler(event:MouseEvent):void
            {
                if (currentState == "normal")
                {
                    currentState = "titleState";
                }
            }

            private function rollOutHandler(event:MouseEvent):void
            {
                if (currentState == "titleState")
                {
                    currentState = "normal";
                }
            }

            private function expandButton_clickHandler():void
            {
                currentState = "detailState";
            }

            private function closeButton_clickHandler():void
            {
                currentState = "normal";
            }

            private function effectStartHandler():void
            {
                parent.removeEventListener(MouseEvent.ROLL_OVER, rollOverHandler);
            }

            private function effectEndHandler():void
            {
                parent.addEventListener(MouseEvent.ROLL_OVER, rollOverHandler);
            }
        ]]>
    </fx:Script>

    <s:states>
        <s:State name="normal"/>
        <s:State name="titleState"/>
        <s:State name="detailState"/>
    </s:states>

    <s:transitions>
        <s:Transition fromState="*" toState="*">
            <s:Resize duration="250"
                      effectEnd="effectEndHandler()"
                      effectStart="effectStartHandler()"
                      target="{this}"/>
        </s:Transition>
    </s:transitions>

    <s:HGroup id="titleBar"
              width="100%"
              verticalAlign="middle">
        <mx:Image id="pieChartImage"
                  width="18" height="18"
                  source="@Embed(source='/assets/pie_chart.gif')"/>
        <s:Label id="titleLabel"
                 fontSize="10"
                 fontWeight="bold"
                 includeIn="titleState,detailState"
                 text="{data.getItemAt(0).CITY_NAME}"/>
        <mx:Button id="expandButton"
                   width="18" height="18"
                   click="expandButton_clickHandler()"
                   includeIn="titleState"
                   styleName="InfoExpandButton"/>
        <mx:Spacer width="100%" includeIn="detailState"/>
        <mx:Button id="closeButton"
                   width="18" height="18"
                   click="closeButton_clickHandler()"
                   includeIn="detailState"
                   styleName="InfoCloseButton"/>
    </s:HGroup>

    <mx:PieChart id="pieChart"
                 width="150" height="150"
                 dataProvider="{data}"
                 includeIn="detailState"
                 showDataTips="true">
        <mx:series>
            <mx:PieSeries field="VALUE"
                          labelPosition="callout"
                          nameField="AGE">
                <mx:calloutStroke>
                    <mx:SolidColorStroke alpha="100"
                                         color="0x000000"
                                         weight="0"/>
                </mx:calloutStroke>
                <mx:radialStroke>
                    <mx:SolidColorStroke alpha="20"
                                         color="#FFFFFF"
                                         weight="0"/>
                </mx:radialStroke>
                <mx:stroke>
                    <mx:SolidColorStroke alpha="20"
                                         color="0"
                                         weight="2"/>
                </mx:stroke>
            </mx:PieSeries>
        </mx:series>
    </mx:PieChart>

</s:VGroup>
